plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.24'
    id 'io.ktor.plugin' version '2.3.11'
}

group "com.example"
version "0.0.1"
mainClassName = "com.example.ApplicationKt"

def isDevelopment = project.ext.has("development")
applicationDefaultJvmArgs = ["-Dio.ktor.development=$isDevelopment"]

repositories {
    mavenCentral()
}
sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = [ 'src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

dependencies {
    implementation "io.ktor:ktor-server-core-jvm"
    implementation "io.ktor:ktor-server-netty-jvm"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-content-negotiation:$ktor_version"
    implementation("io.ktor:ktor-serialization-jackson:$ktor_version")
    testImplementation "io.ktor:ktor-server-tests-jvm"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.2"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

test {
    enableAssertions = true
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
        showStackTraces = false
        exceptionFormat = 'SHORT'
        events "PASSED", "FAILED", "SKIPPED", "STANDARD_OUT", "STANDARD_ERROR"
    }
}
